{"name":"Scrivener errors","tagline":"Basic error messages for Scrivener filters","body":"Scrivener Errors\r\n================\r\n\r\nBasic error messages for [Scrivener](https://github.com/soveran/scrivener)\r\nfilters.\r\n\r\nDescription\r\n-----------\r\n\r\nScrivener errors are returned as a hash with a format like:\r\n\r\n```ruby\r\n{:email => [:not_email], :password => [:not_present]}\r\n```\r\n\r\nThis can be represented instead as a string like:\r\n\r\n```\r\nEmail is not an email, password can't be blank\r\n```\r\n\r\nScrivenerErrors will present these error hashes as a string\r\nor list of errors message for use in failure notices or\r\nform errors.\r\n\r\nThis also comes with a small plugin for [Cuba](http://cuba.is/)\r\nto get the error message easily, `ScrivenerErrors::Helpers`.\r\n\r\nInstallation\r\n------------\r\n\r\n    $ gem install scrivener_errors\r\n\r\nUsage\r\n-----\r\n\r\n```ruby\r\n# Setup the plugin for Cuba\r\nCuba.plugin ScrivenerErrors::Helpers\r\n\r\n# Inside a Cuba action\r\nfilter = Signup.new(req.params)\r\nif !filter.valid?\r\n  session[:error] = filter_error(filter)\r\n  res.redirect \"/some_form\"\r\nend\r\n```\r\n\r\nNotes\r\n-----\r\n\r\nCurrently there's no I18n in use.  The error messages are\r\nfrom a small English mapped hash at the moment.\r\n\r\nAn error type that is not found will be represented like\r\n\"Password is invalid\" by default.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}